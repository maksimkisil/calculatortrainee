{"version":3,"sources":["components/NumberProvider.js","components/NumberButton.js","components/FunctionButton.js","components/ClearButton.js","components/styles/Styles.js","components/Display.js","components/EqualButton.js","components/BackButton.js","components/NegativeButton.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["NumberContext","React","createContext","NumberProvider","props","_useState","useState","_useState2","Object","slicedToArray","number","setNumber","_useState3","_useState4","storedNumber","setStoredNumber","_useState5","_useState6","functionType","setFunctionType","handleSetStoredValue","react_default","a","createElement","Provider","value","doMath","concat","Math","round","parseFloat","handleBackButton","deletedNumber","slice","length","handleClearValue","handleSetCalcFunction","type","handleSetDisplayValue","num","includes","replace","handleToggleNegative","positiveNumber","children","CalculatorButton","_ref","buttonValue","useContext","onClick","FunctionButton","className","ClearButton","CalculatorStyles","styled","div","_templateObject","DisplayStyles","_templateObject2","Display","_useContext","undefined","EqualButton","BackButton","NegativeButton","Calculator","components_Display","components_ClearButton","components_BackButton","components_NegativeButton","components_FunctionButton","NumberButton","components_EqualButton","App","components_NumberProvider","components_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85eaf331.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport const NumberContext = React.createContext();\n\nconst NumberProvider = props => {\n  const [number, setNumber] = useState('');\n  const [storedNumber, setStoredNumber] = useState('');\n  const [functionType, setFunctionType] = useState('');\n\n  const handleSetDisplayValue = num => {\n    if ((!number.includes('.') || num !== '.') && number.length < 8) {\n      setNumber(`${(number + num).replace(/^0+/, '')}`);\n    }\n  };\n\n  const handleSetStoredValue = () => {\n    setStoredNumber(number);\n    setNumber('');\n  };\n\n  const handleClearValue = () => {\n    setNumber('');\n    setStoredNumber('');\n    setFunctionType('');\n  };\n\n  const handleBackButton = () => {\n    if (number !== '') {\n      const deletedNumber = number.slice(0, number.length - 1);\n      setNumber(deletedNumber);\n    }\n  };\n\n  const handleSetCalcFunction = type => {\n    if (number) {\n      setFunctionType(type);\n      handleSetStoredValue();\n    }\n    if (storedNumber) {\n      setFunctionType(type);\n    }\n  };\n\n  const handleToggleNegative = () => {\n    if (number) {\n      if (number > 0) {\n        setNumber(`-${number}`);\n      } else {\n        const positiveNumber = number.slice(1);\n        setNumber(positiveNumber);\n      }\n    } else if (storedNumber > 0) {\n      setStoredNumber(`-${storedNumber}`);\n    } else {\n      const positiveNumber = storedNumber.slice(1);\n      setStoredNumber(positiveNumber);\n    }\n  };\n\n  const doMath = () => {\n    if (number && storedNumber) {\n      switch (functionType) {\n        case '+':\n          setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) + parseFloat(number)) * 100}`) / 100}`);\n          break;\n        case '-':\n          setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) - parseFloat(number)) * 1000}`) / 1000}`);\n          break;\n        case '/':\n          setStoredNumber(`${Math.round(`${(parseFloat(storedNumber) / parseFloat(number)) * 1000}`) / 1000}`);\n          break;\n        case '*':\n          setStoredNumber(`${Math.round(`${parseFloat(storedNumber) * parseFloat(number) * 1000}`) / 1000}`);\n          break;\n        default:\n          break;\n      }\n      setNumber('');\n    }\n  };\n\n  return (\n    <NumberContext.Provider\n      value={{\n        doMath,\n        functionType,\n        handleBackButton,\n        handleClearValue,\n        handleSetCalcFunction,\n        handleSetDisplayValue,\n        handleSetStoredValue,\n        handleToggleNegative,\n        number,\n        storedNumber,\n        setNumber,\n      }}\n    >\n      {props.children}\n    </NumberContext.Provider>\n  );\n};\n\nexport default NumberProvider;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst CalculatorButton = ({ buttonValue }) => {\n  const { handleSetDisplayValue } = useContext(NumberContext);\n  return (\n    <button type=\"button\" onClick={() => handleSetDisplayValue(buttonValue)}>\n      {buttonValue}\n    </button>\n  );\n};\n\nexport default CalculatorButton;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst FunctionButton = ({ buttonValue }) => {\n  const { handleSetCalcFunction } = useContext(NumberContext);\n  return (\n    <button className=\"function-button\" type=\"button\" onClick={() => handleSetCalcFunction(buttonValue)}>\n      {buttonValue}\n    </button>\n  );\n};\n\nexport default FunctionButton;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst ClearButton = () => {\n  const { handleClearValue } = useContext(NumberContext);\n  return (\n    <button type=\"button\" className=\"white-button\" onClick={() => handleClearValue()}>\n      C\n    </button>\n  );\n};\n\nexport default ClearButton;\n","import styled from 'styled-components';\n\nexport const CalculatorStyles = styled.div`\n  background-color: #0d1770;\n  width: 100%;\n  min-height: 100vh;\n  display: grid;\n  justify-items: center;\n  grid-template-rows: minmax(200px 350px) 1fr;\n  grid-template-columns: 1fr;\n  .display {\n    font-family: 'Orbitron', serif;\n    margin: 0 !important;\n    width: 100%;\n    h1 {\n      font-size: 50px;\n      color: #ff043e;\n      text-align: center;\n    }\n  }\n  .number-pad {\n    display: grid;\n    grid-gap: 15px;\n    grid-template-columns: repeat(4, 1fr);\n    padding: 0px 0px 30px;\n    width: 600px;\n    margin: 0 auto;\n    button {\n      width: 100%;\n      height: 80px;\n      border-radius: 0;\n      border: 3px solid black;\n      font-size: 45px;\n      color: white;\n      font-family: 'Orbitron', serif;\n      background: red;\n      &:focus {\n        outline: none;\n      }\n      &:hover {\n        border: 3px solid #dfe6e9;\n        font-weight: 600;\n      }\n    }\n    button.function-button {\n      background-color: #2d3436;\n    }\n    button.white-button {\n      color: #2d3436;\n      background-color: white;\n    }\n  }\n  .zero-button {\n    grid-column: 1/3;\n  }\n`;\n\nexport const DisplayStyles = styled.div`\n  display: grid;\n  grid-template-rows: 90px 50px;\n  grid-template-columns: 1fr;\n  border: 4px solid white;\n  max-width: 700px;\n  margin: 10px auto;\n  align-items: center;\n  border-radius: 20px;\n  background: #e17055;\n  h2,\n  p {\n    text-align: center;\n    color: black;\n    font-size: 22px;\n  }\n  h2 {\n    font-size: 2.5rem;\n    margin: 0;\n    text-align: right;\n    border-bottom: 4px solid white;\n    padding: 15px 20px;\n    @media (max-width: 500px) {\n      font-size: 1.5rem;\n      padding: 10px;\n    }\n  }\n  h2.long-main-display {\n    font-size: 1.2rem;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\nimport { DisplayStyles } from './styles/Styles';\n\nconst Display = () => {\n  const { number, storedNumber, functionType } = useContext(NumberContext);\n  return (\n    <DisplayStyles>\n      <h2 className={storedNumber && storedNumber.length > 12 ? 'long-main-display' : undefined}>\n        {!number.length && !storedNumber ? '0' : number || storedNumber}\n      </h2>\n      <p className={storedNumber && storedNumber.length > 12 ? 'long-stored-display' : undefined}>\n        {!storedNumber ? 'ВВЕДИТЕ ВАШИ ЧИСЛА,ГОСПОДИН' : `${storedNumber} ${functionType} ${number}`}\n      </p>\n    </DisplayStyles>\n  );\n};\n\nexport default Display;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst EqualButton = () => {\n  const { doMath } = useContext(NumberContext);\n  return (\n    <button className=\"white-button\" type=\"button\" onClick={() => doMath()}>\n      =\n    </button>\n  );\n};\n\nexport default EqualButton;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst BackButton = () => {\n  const { handleBackButton } = useContext(NumberContext);\n  return (\n    <button type=\"button\" className=\"white-button\" onClick={() => handleBackButton()}>\n      &#8592;\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\nconst NegativeButton = () => {\n  const { handleToggleNegative } = useContext(NumberContext);\n  return (\n    <button type=\"button\" className=\"white-button\" onClick={() => handleToggleNegative()}>\n      -/+\n    </button>\n  );\n};\n\nexport default NegativeButton;\n","import React from 'react';\nimport NumberButton from './NumberButton';\nimport FunctionButton from './FunctionButton';\nimport ClearButton from './ClearButton';\nimport Display from './Display';\nimport EqualButton from './EqualButton';\nimport BackButton from './BackButton';\nimport NegativeButton from './NegativeButton';\nimport { CalculatorStyles } from './styles/Styles';\n\nconst Calculator = () => (\n  <CalculatorStyles>\n    <div className=\"display\">\n      <h1>2+2=5к</h1>\n      <Display />\n    </div>\n    <div className=\"number-pad\">\n      <ClearButton />\n      <BackButton />\n      <NegativeButton />\n      <FunctionButton buttonValue=\"/\" />\n      <NumberButton buttonValue={7} />\n      <NumberButton buttonValue={8} />\n      <NumberButton buttonValue={9} />\n      <FunctionButton buttonValue=\"*\" />\n      <NumberButton buttonValue={4} />\n      <NumberButton buttonValue={5} />\n      <NumberButton buttonValue={6} />\n      <FunctionButton buttonValue=\"-\" />\n      <NumberButton buttonValue={1} />\n      <NumberButton buttonValue={2} />\n      <NumberButton buttonValue={3} />\n      <FunctionButton buttonValue=\"+\" />\n      <div className=\"zero-button\">\n        <NumberButton buttonValue={0} />\n      </div>\n      <NumberButton buttonValue=\".\" />\n      <EqualButton />\n    </div>\n  </CalculatorStyles>\n);\n\nexport default Calculator;\n","import React from 'react';\nimport Calculator from './components/Calculator';\nimport NumberProvider from './components/NumberProvider';\n\nconst App = () => (\n  <NumberProvider>\n    <Calculator />\n  </NumberProvider>\n);\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://github.com/OleksandrHladchenko1/calculator_trainee'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. '\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'Нет интернет соеденения '\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}